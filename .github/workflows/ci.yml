name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: {}

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        exclude:
          # 减少矩阵组合，保留关键测试
          - os: macos-latest
            python-version: '3.9'
          - os: macos-latest
            python-version: '3.10'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt', 'requirements-test.txt') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-pip-

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      - name: Lint with flake8
        run: |
          flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests with coverage (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        env:
          PYTHONPATH: .
          DISPLAY: :99
        run: |
          xvfb-run -a python -m pytest tests/ -v --cov=src --cov-report=xml --cov-report=term-missing

      - name: Run tests (macOS)
        if: matrix.os == 'macos-latest'
        env:
          PYTHONPATH: .
        run: |
          python -m pytest tests/ -v

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run integration tests
        env:
          PYTHONPATH: .
          DISPLAY: :99
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          xvfb-run -a python -c "
          import sys
          sys.path.append('.')
          from src.analysis.enhanced_viz import EnhancedVizAgent
          from src.analysis.nobel_analysis import NobelAnalysisAgent
          import pandas as pd
          
          # 测试基本功能
          print('Testing EnhancedVizAgent...')
          agent = EnhancedVizAgent()
          templates = agent.list_available_templates()
          print(f'Available templates: {len(templates)}')
          
          # 测试数据分析
          print('Testing NobelAnalysisAgent...')
          nobel_agent = NobelAnalysisAgent()
          print('Integration tests passed!')
          "